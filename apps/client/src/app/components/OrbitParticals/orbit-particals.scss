$total: 500; // total particles
$orb-size: 630px; // Increased orb size
$particle-size: 3.5px;
$time: 30s;
$base-hue: 5; // change for different colors (180 is nice)
$dark-hue: 300; // hue for dark mode
$max-translate-z: 170px; // Maximum translation on Z-axis, reduced to bring closer to user

html,
body {
   height: 100%;
   margin: 0; // Ensure there is no default margin
   display: flex;
   justify-content: center;
   align-items: center; // Center content vertically and horizontally
}

body {
   background: transparent;
   overflow: hidden; // no scrollbars
}

.orbit-wrap {
   position: relative;
   width: $orb-size; // Width of the orb
   height: $orb-size; // Height of the orb
   transform-style: preserve-3d;
   perspective: 1000px;
   animation: rotate $time infinite linear; // rotate orb
}

@keyframes rotate {
   100% {
      transform: rotateY(360deg) rotateX(360deg);
   }
}

.orbit {
   position: absolute;
   top: 50%; // Center the particle vertically
   left: 50%; // Center the particle horizontally

   transform: translate(-50%, -50%); // Correct for the dimension of the particle itself
   border-radius: 50%;
   opacity: 0;
}

@for $i from 1 through $total {
   $z: (random(360) * 1deg); // random angle to rotateZ
   $y: (random(360) * 1deg); // random to rotateX
   $hue: ((40 / $total * $i) + $base-hue); // set hue for light mode
   $dark-mode-hue: ((40 / $total * $i) + $dark-hue); // set hue for dark mode

   .orbit-#{$i} {
      // grab the nth particle
      animation: orbit#{$i} $time infinite;
      animation-delay: ($i * 0.02s); // increased delay to reduce simultaneous particle animations
      background-color: hsla($hue, 100%, 50%, 1);
      width: 2px;
      height: 2px;
   }

   html.dark .orbit-#{$i} {
      background-color: hsla($dark-mode-hue, 100%, 50%, 1);
      width: 3.5px;
      height: 3.5px;
   }

   @keyframes orbit#{$i} {
      0%,
      20% {
         opacity: 0;
         transform: rotateZ(-$z) rotateY($y) translateX(0) translateZ(0);
      }
      30% {
         opacity: 1; // fade in
         transform: rotateZ(-$z) rotateY($y) translateX($orb-size / 2) translateZ($max-translate-z / 2);
      }
      70% {
         opacity: 1;
         transform: rotateZ(-$z) rotateY($y) translateX($orb-size) translateZ($max-translate-z);
      }
      100% {
         opacity: 0;
         transform: rotateZ(-$z) rotateY($y) translateX($orb-size * 1.5) translateZ($max-translate-z * 1.5);
      }
   }
}
